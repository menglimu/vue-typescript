@mixin pos($top:0,$right: $top,$bottom: $top,$left: $right){
	top: $top;
	right: $right;
	bottom: $bottom;
  left: $left;
}
// flex布局
@mixin inline($child:null,$class:null){
	display:flex;
	align-items:center;
	// 文字组默认上对齐
	&>.text-group{
		align-self:flex-start;
	}
	@each $childOne in $child {
		@if $childOne != null{
		  &>*:nth-child(#{$childOne}){
		  	//display: block;//兼容部分浏览器由于影响子元素布局，现去掉
				
				width: 0;
				flex: 1;
			}
	  }
	}
	@each $classOne in $class {
		@if $classOne != null {
		  &>#{$classOne}{ 
		  	// display: block;
				width: 0;
				flex: 1;
			}
	  }
	}
}

// 圆角
@mixin badge($width: 100%) {
    min-width: $width;
    min-height: $width;
    border-radius: $width;
    line-height: $width;
    text-align: center;
    box-sizing: initial;
}
// 多行文本溢出显示省略号
// -----------------------------------------------------------------------------
@mixin ells($line: 2, $line-height: 19px) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
  word-break: break-all;
  text-overflow: ellipsis;
  line-height: $line-height;
  max-height: $line-height * $line + 10px;
}

// 单行文本溢出显示省略号
// -----------------------------------------------------------------------------
@mixin ell($align: inherit) {
  word-wrap: normal;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  text-align: $align;
}

// 动画 居中定位
@mixin center($width: null, $height: null) {
    position: absolute;
    top: 50%;
    left: 50%;

    @if not $width and not $height {
        transform: translate(-50%, -50%);
    }

    @else if $width and $height {
        width: $width;
        height: $height;
        margin: -($height / 2) #{0 0} -($width / 2);
    }

    @else if not $height {
        width: $width;
        margin-left: -($width / 2);
        transform: translateY(-50%);
    }

    @else {
        height: $height;
        margin-top: -($height / 2);
        transform: translateX(-50%);
    }
}



@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie);
}


/* 定义滚动条样式 圆角和阴影不需要则传入null */
@mixin scrollBar($width:10px, $height:10px, $outColor:$bgColor, $innerColor:$bgGrey, $radius:5px, $shadow:null) {

    /*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/
    &::-webkit-scrollbar {
        width: $width;
        height: $height;
        background-color: $outColor;
    }

    /*定义滚动条轨道 内阴影+圆角*/
    &::-webkit-scrollbar-track {
        @if ($shadow !=null) {
            -webkit-box-shadow: $shadow;
        }

        @if ($radius !=null) {
            border-radius: $radius;
        }

        background-color: $outColor;
    }

    /*定义滑块 内阴影+圆角*/
    &::-webkit-scrollbar-thumb {
        @if ($shadow !=null) {
            -webkit-box-shadow: $shadow;
        }

        @if ($radius !=null) {
            border-radius: $radius;
        }

        background-color: $innerColor;
        border: 1PX solid $innerColor;
    }
}



@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin scrollBar() {
  &::-webkit-scrollbar-track-piece {
    background: #d3dce6;
  }
  &::-webkit-scrollbar {
    width: 6px;
  }
  &::-webkit-scrollbar-thumb {
    background: #99a9bf;
    border-radius: 20px;
  }
}

@mixin relative() {
  position: relative;
  width: 100%;
  height: 100%;
}

